name: Fetch Commits and Create PR

# on:
#   schedule:
#     - cron: '* * * * *'  # Runs daily at midnight UTC

on:
  push:
    branches: [ master ]

jobs:
  fetch-and-create-pr:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository gtfs-validator
        uses: actions/checkout@v4.0.0
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.FRED_PERSONAL_GITHUB_TOKEN }} 

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Set up Git
        id: git-setup
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          echo "user_name=github-actions[bot]" >> $GITHUB_OUTPUT
          echo "user_email=41898282+github-actions[bot]@users.noreply.github.com" >> $GITHUB_OUTPUT
          echo "reviewer=emmambd" >> $GITHUB_OUTPUT 
          echo "assigned=fredericsimard" >> $GITHUB_OUTPUT
        # Comma-separated list of reviewers and assignees

      - name: Calculate Dates
        id: dates
        run: |
          echo "yesterday=$(date -d '-1 day' '+%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get Commits
        uses: octokit/request-action@v2.x
        id: get-commits
        with:
          route: GET /repos/google/transit/commits?path=gtfs/spec/en/reference.md&since=2023-08-01T00:00:00Z
          mediaType: |
            format: json
        env:
          GITHUB_TOKEN: ${{ secrets.FRED_PERSONAL_GITHUB_TOKEN }}

      - name: Analyze JSON
        id: analyse-json
        run: |
          # Extract the first element of the JSON array
          first_element=$(echo "${{ steps.get-commits.outputs.data }}" | jq '.[0]')
          echo "json_object=${first_element}" >> $GITHUB_OUTPUT

        shell: bash

      - name: Check condition
        id: condition_check
        run: |
          num_elements=$(echo "${{ steps.analyse-json.outputs.json_object }}" | jq 'length')
          
          if [ "${num_elements}" -gt 0 ]; then
            echo "condition_met=true" >> $GITHUB_OUTPUT
          else
            echo "condition_met=false" >> $GITHUB_OUTPUT
          fi

          echo "number of commits : {$num_elements}"
        shell: bash

      # echo "${{fromJson(steps.set_var.outputs.packageJson).version}}"
      #  commit_messages=$(echo "${{ steps.get-commits.outputs.data }}" | jq -r '.[].commit.message')

      # - name: Extract File Paths from Commits
      #   id: extract-file-paths
      #   if: steps.condition_check.outputs.condition_met == 'true'
      #   run: |
      #     commits=$(echo "${{ steps.fetch-commits.outputs.commits }}")
      #     file_paths=$(echo "$commits" | jq -r '.[].files[].filename' | sort -u)
      #     echo "file-paths=${file_paths}" >> $GITHUB_OUTPUT
      #     echo "commits? ${{ steps.condition_check.outputs.condition_met }}"

      # - name: Create Branch and commit in GTFS validator repo
      #   id: create-branch-commit
      #   if: steps.condition_check.outputs.condition_met == 'true'
      #   run: |
      #     access_token=${{ secrets.FRED_PERSONAL_GITHUB_TOKEN }}
      #     repo_owner=fredericsimard         # TO CHANGE IN FINAL VERSION
      #     repo_name=gtfs-validator-fork     # TO CHANGE IN FINAL VERSION
      #     base_branch=master
      #     new_branch=reference-md-commits-${{ steps.dates.outputs.today }}
      #     file_paths=${{ steps.extract-file-paths.outputs.file-paths }}

      #     # Create a new branch
      #     git checkout -b "$new_branch"

      #     # Add all files to the commit
      #     git add .

      #     # Commit and push changes to the new branch
      #     git commit -am "Changes made to reference.md in the Google Transit repo."

      #     echo "base_branch=${base_branch}" >> $GITHUB_OUTPUT
      #     echo "new_branch=${new_branch}" >> $GITHUB_OUTPUT
      #     echo "commits? ${{ steps.condition_check.outputs.condition_met }}"

      # - name: Push changes
      #   id: push-changes
      #   if: steps.condition_check.outputs.condition_met == 'true'
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.FRED_PERSONAL_GITHUB_TOKEN }}
      #     branch: ${{ steps.create-branch-commit.outputs.new_branch }}
      #     force: true

      - name: Create PR
        id: create-pr
        if: steps.condition_check.outputs.condition_met == 'true'
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          token: ${{ secrets.FRED_PERSONAL_GITHUB_TOKEN }}
          branch: ${{ steps.create-branch-commit.outputs.new_branch }}
          base: ${{ steps.create-branch-commit.outputs.base_branch }}
          title: Changes made to `reference.md` from Google Transit's repo
          body: Commits have been made to the `reference.md` file in the last 24 hours (${{ steps.dates.outputs.yesterday }} at midnight UTC). Automatically generated a pull request.
          author: "${{ steps.git-setup.outputs.user_name }} <${{ steps.git-setup.outputs.user_email }}>"
          reviewers: ${{ steps.git-setup.outputs.reviewer }}
          assignees: ${{ steps.git-setup.outputs.assigned }}
          add-paths: ${{ steps.extract-file-paths.outputs.file-paths }}
